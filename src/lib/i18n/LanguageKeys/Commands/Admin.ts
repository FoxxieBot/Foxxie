import type { HelpDisplayData } from '#lib/types';
import { FT, T } from '@foxxie/i18n';

export const ConfDescription = T('commands/admin:confDescription');
export const ConfDetailedDescription = T<HelpDisplayData>('commands/admin:confDetailedDescription');
export const ConfGet = FT<{ key: string; value: string }>('commands/admin:confGet');
export const ConfGetNoExist = FT<{ key: string }>('commands/admin:confGetNoExist');
export const ConfMenuInvalidAction = T('commands/admin:confMenuInvalidAction');
export const ConfMenuInvalidKey = T('commands/admin:confMenuInvalidKey');
export const ConfMenuNoChange = FT<{ key: string }>('commands/admin:confMenuNoChange');
export const ConfMenuRenderAtFolder = FT<{ path: string }>('commands/admin:confMenuRenderAtFolder');
export const ConfMenuRenderAtPiece = FT<{ path: string }>('commands/admin:confMenuRenderAtPiece');
export const ConfMenuRenderBack = T('commands/admin:confMenuRenderBack');
export const ConfMenuRenderCValue = FT<{ value: string }>('commands/admin:confMenuRenderCValue');
export const ConfMenuRenderNoKeys = T('commands/admin:confMenuRenderNoKeys');
export const ConfMenuRenderRemove = T('commands/admin:confMenuRenderRemove');
export const ConfMenuRenderReset = T('commands/admin:confMenuRenderReset');
export const ConfMenuRenderSelect = T('commands/admin:confMenuRenderSelect');
export const ConfMenuRenderUndo = T('commands/admin:confMenuRenderUndo');
export const ConfMenuRenderUpdate = T('commands/admin:confMenuRenderUpdate');
export const ConfMenuSaved = T('commands/admin:confMenuSaved');
export const ConfMissingValue = T('commands/admin:confMissingValue');
export const ConfNotSet = T('commands/admin:confNotSet');
export const ConfReset = FT<{ key: string; value: string }>('commands/admin:confReset');
export const ConfServer = FT<{ key: string; list: string }>('commands/admin:confServer');
export const ConfUpdated = FT<{ key: string; response: string }>('commands/admin:confUpdated');
export const ConfValidationChooseKey = FT<{ keys: string[] }>('commands/admin:confValidationChooseKey');
export const EvalConsole = FT<{ name: string; footer: string; time: string }>('commands/admin:evalConsole');
export const EvalDescription = T('commands/admin:evalDescription');
export const EvalDetailedDescription = T<HelpDisplayData>('commands/admin:evalDetailedDescription');
export const EvalError = FT<{ output: string; type: string; time: string }>('commands/admin:evalError');
export const EvalHaste = FT<{ output: string; footer: string; time: string }>('commands/admin:evalHaste');
export const EvalOutput = FT<{ output: string; footer: string; time: string }>('commands/admin:evalOutput');
export const Reload = FT<{ type: string; name: string; time: string }>('commands/admin:reload');
export const ReloadAll = FT<{ type: string; time: string }>('commands/admin:reloadAll');
export const ReloadDescription = T('commands/admin:reloadDescription');
export const ReloadDetailedDescription = T<HelpDisplayData>('commands/admin:reloadDetailedDescription');
export const ReloadEverything = FT<{ time: string }>('commands/admin:reloadEverything');
export const ReloadLanguage = FT<{ language: string; time: string }>('commands/admin:reloadLanguage');
export const ServerlistDescription = T('commands/admin:serverlistDescription');
export const ServerlistDetailedDescription = T<HelpDisplayData>('commands/admin:serverlistDetailedDescription');
export const ServerlistFooter = FT<{ count: number }>('commands/admin:serverlistFooter');
export const ServerlistMembers = T('commands/admin:serverlistMembers');
export const ServerlistTitle = FT<{ name: string }>('commands/admin:serverlistTitle');
