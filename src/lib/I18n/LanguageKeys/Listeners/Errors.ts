import { FT, T } from '#lib/types';
import type { UserMention } from 'discord.js';

export const Abort = T('listeners/errors:abort');
export const GenericUnknownChannel = T('errors:genericUnknownChannel');
export const GenericUnknownGuild = T('errors:genericUnknownGuild');
export const GenericUnknownMember = T('errors:genericUnknownMember');
export const GenericUnknownMessage = T('errors:genericUnknownMessage');
export const GenericUnknownRole = T('errors:genericUnknownRole');
export const GenericMissingAccess = T('errors:genericMissingAccess');
export const GenericDiscordInternalServerError = T('errors:genericDiscordInternalServerError');
export const GenericDiscordGateway = T('errors:genericDiscordGateway');
export const GenericDiscordUnavailable = T('errors:genericDiscordUnavailable');
export const ModerationBannable = FT<{ target: string }>('listeners/errors:moderationBannable');
export const ModerationFoxxie = FT('listeners/errors:moderationFoxxie');
export const ModerationHasError = FT<{ count: number }>('listeners/errors:moderationHasError');
export const ModerationKickable = T('listeners/errors:moderationKickable');
export const ModerationMember = FT<{ target: string }>('listeners/errors:moderationMember');
export const ModerationRole = FT<{ target: string }>('listeners/errors:moderationRole');
export const ModerationRoleBot = FT<{ target: string }>('listeners/errors:moderationRoleBot');
export const ModerationSelf = T('listeners/errors:moderationSelf');
export const String = FT<{ mention: UserMention; error: string }>('listeners/errors:string');
export const TooManyRoles = T('listeners/errors:tooManyRoles');
export const Unexpected = T('listeners/errors:unexpected');
export const UnexpectedWithCode = FT<{ report: string }>('listeners/errors:unexpectedWithCode');
export const UserNotInGuild = T<string>('listeners/errors:userNotInGuild');
