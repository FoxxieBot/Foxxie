/**
 * Co-authored by Ruff (http://ruff.cafe)
 * Co-authored by Aria
 */
const { Util, Language, bold, code, underline, italic } = require('foxxie');
const { supportServer, communityServer, topggURL, version } = require('../../config/foxxie');
const { emojis: { infinity, perms: { notSpecified, granted }, covid: { cases, tests, deaths, recoveries }, weather: { temperature, date, humidity, winds, feels, timezone, dayCurrent } }, credits: { developer, spanishTranslation, additionalHelp } } = require('../../lib/util/constants');

module.exports = class extends Language {

    constructor(...args) {
        super(...args);
        this.language = {

            DEFAULT: (key) => `${key} has not been localized for en-US yet.`,
			DEFAULT_LANGUAGE: 'Default Language',
            PREFIX_REMINDER: (prefixes, prefix) => [
                `${bold`Heya!`} My prefixes for this guild are ${prefixes} and **${code`${prefix}`}**.`,
                `For a list of all my commands, try out ${code`${prefix}help`}.`
            ].join(' '),

            ERROR_GENERIC: (err) => `${bold`Whoops,`} an error occurred: ${Util.codeBlock('js', err)}`,
            ERROR_SHORT: err => err,

			ACTIVITY_PLAYING: 'Playing',
			ACTIVITY_LISTENING: 'Listening to',
			ACTIVITY_STREAMING: 'Streaming',

            MESSAGE_INVALID_USE: usage => `${bold`Please,`} specify a proper use case ${usage}.`,
            MESSAGE_LOADING: `${infinity} ${bold`Alright, I'm taking your order.`} This may take a few seconds.`,
            MESSAGE_MEMBERS_NONE: `You need to specify at least ${bold`one member`}.`,
            MESSAGE_PROMPT_CANCELLED: `Command ${bold`cancelled`}.`,
			MESSAGE_PROMPT_TIMEOUT: `${bold`Sorry,`} the prompt has timed out.`,
			MESSAGE_PROMPT_ABORT_OPTIONS: ['abort', 'stop', 'cancel'],
            MESSAGE_USERS_NONE: `You need to specify at least ${bold`one user`}.`,

            // Admin Commands
            COMMAND_CREATEKEY_DESCRIPTION: `Creates a key that a user can redeem for a badge on their Info card using the ${code`redeem`} command.`,
            COMMAND_CREATEKEY_NOID: `${bold`Hey,`} you didn't provide a proper Id. This command is locked to the bot owner due to it's special nature.`,
            COMMAND_CREATEKEY_SUCCESS: (icon, name, key) => `${bold`Success!`} here is a key for ${icon} ${name}: ${code`${key}`}.`,
            COMMAND_DISABLE_DESCRIPTION: `Disables a Foxxie piece so it can no longer be used, if specified piece is a command it will be hidden from the ${bold`help`} command. This command is locked to the bot owner due to the power it has.`,
            COMMAND_DISABLE_NOPIECE: `${bold`Please`} specify a piece to disable.`,
            COMMAND_DISABLE_WARN: `${bold`Hey,`} you shouldn't disable this piece because if you do, you won't be able to re-enable it.`,
            COMMAND_ENABLE_DESCRIPTION: `Enables a Foxxie piece so it can continue being used. This command is locked to the bot owner due to the power it has.`,
            COMMAND_ENABLE_NOPIECE: `${bold`Please`} specify a piece to enable.`,
            COMMAND_EVAL_DESCRIPTION: [
                `Allows you evaluate JavaScript code straight from Discord. This command is locked to the bot owner due to the power it has.\n`,
                `The eval command evaluates code as-in, any error thrown from it will be handled.`,
                `This command also takes advantage of my message flags feature. Write any of the following to cusomize your output:\n`,
                `- The ${code`-silent`} flag will make it output silently or nothing.`,
                `- The ${code`-depth`} flag accepts a number, for example ${code`-depth=2`}, to cusomize the depth of util.inspect.`,
                `- The ${code`-async`} flag will wrap the input in an asynchonus function, allowing the use of await, however if you want to return something, you will need to use the return keyword.`,
                `- The ${code`-message`} flag will output the result as a Discord message.\n`,
                `If the output is too long it will automatically splice to fit inside of the message.`,
            ].join('\n'),
            COMMAND_EVAL_ERROR: (time, output, type) => `**Error**:${output}\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_OUTPUT: (time, output, type) => `**Output**:${output}\n**Type**:${type}\n${time}`,
            COMMAND_REBOOT: `${bold`Okay,`} restarting.｡｡｡zzZ`,
            COMMAND_REBOOT_DESCRIPTION: `Restarts my internal process while being run on process manager 2. This command is locked to the bot owner due to obvious reasons.`,
            COMMAND_RELOAD_DESCRIPTION: `Reloads a Foxxie Piece without having to restart the client. This command is locked to the bot owner due to it's special nature.`,
            COMMAND_RELOAD_ERROR: (name, error) => `${bold`Uh oh,`} failed to reload ${name}${Util.codeBlock('js', error)}`,
            COMMAND_RELOAD_NONE: `${bold`Whoops,`} please specify a piece to reload [Command | Monitor | Language ].`,
            COMMAND_RELOAD_SUCCESS: (name, type, time) => `${bold`Successfully`} reloaded ${type}: ${bold`${name}`}. (Took ${time})`,
            COMMAND_SERVERLIST_DESCRIPTION: `Displays every guild the bot is currently in, along with their Id and membercount. This command is locked to the bot owner due to privacy concerns.`,
            COMMAND_SERVERLIST_FOOTER: (size, page, totalPages) => `${size} total servers\nPage - ${page}/${totalPages}`,
            COMMAND_SERVERLIST_MEMBERCOUNT: `members`,
            COMMAND_SERVERLIST_TITLE: `Servers using Foxxie`,

            // Fun Commands
            COMMAND_CAT_DESCRIPTION: `Sends me to get you a random picture of a cat from https://api.thecatapi.com`,
            COMMAND_CAT_FOOTER: `From api.thecatapi.com`,
            COMMAND_CAT_TITLE: `Random Cat`,
            COMMAND_DOG_DESCRIPTION: `Sends me to get you a random picture of a dog from https://dog.ceo/api`,
            COMMAND_DOG_FOOTER: `From dog.ceo/api`,
            COMMAND_DOG_TITLE: `Random Dog`,
            COMMAND_FOX_DESCRIPTION: `I'll go and get you a picture of one of my family members from https://randomfox.ca`,
            COMMAND_FOX_FOOTER: `From randomfox.ca/floof`,
            COMMAND_FOX_TITLE: `Random Fox:`,
            COMMAND_FOXFACT_DESCRIPTION: `I'll provide you with a cool fact about foxes from https://some-random-api.ml/facts/fox`,
            COMMAND_FOXFACT_NOFACT: `${bold`Whoops,`} there was an error fetching your fact.`,
            COMMAND_HOWGAY: (user, percent) => `:rainbow_flag: ${bold`${user}`} is ${bold`${percent}%`} gay.`,
            COMMAND_HOWGAY_DESCRIPTION: `Truly determine how gay a user is.`,
            COMMAND_OWOIFY_DESCRIPTION: `Transforms given text into owo speak. This command also takes advantage of my message flags feature, add ${code`-d`} to your message to automatically delete it.`,
            COMMAND_OWOIFY_NOARGS: `${bold`Hey,`} u nyeed two pwovide swomwething two owoify. :pleading_face:`,
            COMMAND_POKEMON_DESCRIPTION: `I'll provide you with some stats about a pokemon you specify. This command also takes advantage of my flags feature, add ${code`-s`} after the pokemon for me to show it's shiny sprite instead of the normal.`,
            COMMAND_POKEMON_ATTACK: bold`Attack`,
            COMMAND_POKEMON_BASEXP: bold`Base Exp`,
            COMMAND_POKEMON_DEFENSE: bold`Defense`,
            COMMAND_POKEMON_HEIGHT: bold`Height`,
            COMMAND_POKEMON_INVALID: `${bold`Looks`} like that pokemon is invalid! How bout an actual one this time oki?`,
            COMMAND_POKEMON_NOARGS: `${bold`Cmon,`} you gotta enter a pokemon for me to show.`,
            COMMAND_POKEMON_SPECIALATTACK: bold`Special Atk`,
            COMMAND_POKEMON_SPECIALDEFENSE: bold`Special Def`,
            COMMAND_POKEMON_SPEED: bold`Speed`,
            COMMAND_POKEMON_TYPE: bold`Type`,
            COMMAND_POKEMON_WEIGHT: bold`Weight`,
            COMMAND_TOPIC_DESCRIPTION: `I'll get you a random conversation starter for when your chat starts to doze off. Powered by https://www.conversationstarters.com`,
            COMMAND_URBAN_DESCRIPTION: `I'll get you data from an urban dictionary word you provide, including link, upvotes, definition, and examples.`,
            COMMAND_URBAN_EXAMPLE: bold`Example`,
            COMMAND_URBAN_FOOTER: author => `By ${author}`,
            COMMAND_URBAN_NODATA: `${bold`Yikes,`} sorry I couldn't find any data for that term.`,
            COMMAND_URBAN_NODEFINITION: `No definition available.`,
            COMMAND_URBAN_NOEXAMPLE: `No example available.`,
            COMMAND_URBAN_NOWORD: `${bold`Okay,`} how do you expect me to define a word if you don't provide one?`,

            // Moderation Commands
            COMMAND_BAN_DESCRIPTION: [
                `Bans users from the server so they can no longer join.`,
                `Formatting time like ${code`1d`} for one day, you can temporarily ban users and have them automatically be unbanned after a specified time period.`,
                `This command also takes advantage of my message flags feature, adding ${code`-p`} to the message will automatically clear one days worth of the user's messages.\n`,
                `If a moderation logging channel is set in your server, this command will log there, and send DMs to the users banned, with the provided reason.`
            ].join('\n'),
            COMMAND_BAN_ERROR: (user, issue) => `${bold`Whoops`} I couldn't ban ${bold`${user}`}:${Util.codeBlock('js', issue)}`,
            COMMAND_BAN_NOPERMS: multiple => `${bold`Hey,`} you cannot ban ${multiple ? 'any of the specified users' : 'the specified user'}.`,
            COMMAND_MUTE_ROLE_DEFAULT: `Silenced`,
            COMMAND_MUTE_ROLE_REASON: `Setting up the mute settings.`,
            COMMAND_NUKE: `${bold`First hehe,`} anyways this channel was nuked by the owner of the server. All previous messages have been cleared out.`,
            COMMAND_NUKE_DESCRIPTION: `Completely wipes a channel of all messages and clones its permissions, topic, and position. Only server owners can use this command due to the harm it may cause. Also keep in mind: mine or any other bot's settings will no longer work in that channel. If a moderation logging channel is set in your server, this command will log there.`,
            COMMAND_NUKE_WARNING: (author, channel) => `${author}, ya sure you want to nuke this channel? This will get rid of ${bold`all messages`} in the channel and ${bold`can't be undone`}. If you're positive go ahead and type ${code`yes, nuke ${channel}`} within the next 30 seconds. If you'd like to cancel just send ${code`cancel`} or any other message. Also, gotta tell you that this simply clones the channel meaning some settings from myself or other bots won't work anymore.`,
            COMMAND_STAFFLOG_DESCRIPTION: `Shows a list of moderation actions performed by a member of your server.`,
            COMMAND_STAFFLOG_NONE: member => `${bold`${member}`} has not performed any moderation actions.`,
            COMMAND_STAFFLOG_ONE: (member, ban, kick, warn, jail, mute) => [
                underline`Moderation logs for ${bold`${member}`}:\n`,
                ban ? `${notSpecified} Issued ${ban.toLocaleString()} ${bold`ban${ban === 1 ? '' : 's'}`}` : null,
                kick ? `${notSpecified} Issued ${kick.toLocaleString()} ${bold`kick${kick === 1 ? '' : 's'}`}` : null,
                warn ? `${notSpecified} Issued ${warn.toLocaleString()} ${bold`warn${warn === 1 ? '' : 's'}`}` : null,
                jail ? `${notSpecified} Issued ${jail.toLocaleString()} ${bold`jail${jail === 1 ? '' : 's'}`}` : null,
                mute ? `${notSpecified} Issued ${mute.toLocaleString()} ${bold`mute${mute === 1 ? '' : 's'}`}` : null,
            ].filter(a => !!a).join('\n'),
            COMMAND_STAFFLOG_TWO: (slow, lock, unlock, nuke, purge, total) => [
                slow ? `${notSpecified} Performed ${slow.toLocaleString()} ${bold`slowmode${slow === 1 ? '' : 's'}`}` : null,
                lock ? `${notSpecified} Performed ${lock.toLocaleString()} ${bold`lock${lock === 1 ? '' : 's'}`}` : null,
                unlock ? `${notSpecified} Performed ${unlock.toLocaleString()} ${bold`unlock${unlock === 1 ? '' : 's'}`}` : null,
                nuke ? `${notSpecified} Completed ${nuke.toLocaleString()} ${bold`nuke${nuke === 1 ? '' : 's'}`}` : null,
                purge ? `${notSpecified} Performed ${purge.toLocaleString()} ${bold`purge${purge === 1 ? '' : 's'}`} (${bold`${total.toLocaleString()}`} message${total === 1 ? '' : 's'})` : null
            ].filter(a => !!a).join('\n'),
            COMMAND_VCKICK_DESCRIPTION: ``,
            COMMAND_VCKICK_NOPERMS: multiple => `${bold`Hey,`} you can't kick ${multiple ? `any of the specified members` : `the specified member`} from vc.`,
            COMMAND_VCKICK_NOVOICE: multiple => `${multiple ? `${bold`None`} of the specified members are` : `${bold`Hey,`} the specified member is not`} in vc.`,
            COMMAND_VCMUTE_DESCRIPTION: `I will mute the specified members if they are in a vc and not server muted. If a moderation logging channel is set, this action will log there.`,
            COMMAND_VCMUTE_NOPERMS: multiple => `${bold`Hey,`} you can't mute ${multiple ? `any of the specified members` : `the specified member`} in vc.`,
            COMMAND_VCMUTE_NOVOICE: multiple => `${multiple ? `${bold`The`} specified members are not` : `${bold`Hey,`} the specified member is not`} in vc or ${multiple ? `are` : `is`} already muted.`,
            COMMAND_VCUNMUTE_DESCRIPTION: `I will unmute the specified members if they are in a vc and server muted. If a moderation logging channel is set, this action will log there.`,
            COMMAND_VCUNMUTE_NOPERMS: multiple => `${bold`Hey,`} you can't unmute ${multiple ? `any of the specified members` : `the specified member`} from vc.`,
            COMMAND_VCUNMUTE_NOVOICE: multiple => `${multiple ? `${bold`None`} of the specified members are` : `${bold`Hey,`} the specified member is not`} in vc or muted.`,
            COMMAND_WARN_DESCRIPTION: `Adds warnings to members that will show on their ${code`info`} profile.\nIf a moderation logging channel is set in your server, this command will log there, and send DMs to the members warned, with the provided reason.`,
            COMMAND_WARN_NOPERMS: multiple => `${bold`Sorry,`} you can't warn ${multiple ? 'any of the specified members' : 'the specified member'}.`,

            // Roleplay Commands
            COMMAND_ANGRY_DESCRIPTION: `Get angry at someone (ಠ_ಠ)`,
            COMMAND_ANGRY_FOOTER: (sender, reciever, authNum, recNum) => `${sender} got angry ${authNum} times, and ${reciever} made others angry ${recNum} times`,
            COMMAND_ANGRY_MULTIPLE: (sender, reciever) => `${bold`${sender}`} got angry because of ${bold`${reciever}`}`,
            COMMAND_ANGRY_SELF: `is angry`,
            COMMAND_ANGRY_SINGLE: (sender, reciever) => `${bold`${sender}`} is angry with ${bold`${reciever}`}`,
            COMMAND_BLUSH_DESCRIPTION: `Start blushing at someone.`,
            COMMAND_BLUSH_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} blushed ${recNum} times and ${sender} blushed at others ${authNum} times`,
            COMMAND_BLUSH_MULTIPLE: (sender, reciever) => `${bold`${sender}`} blushes at ${bold`${reciever}`}`,
            COMMAND_BLUSH_SELF: `is blushing`,
            COMMAND_BLUSH_SINGLE: (sender, reciever) => `${bold`${sender}'s`} face turned red because of ${bold`${reciever}`}`,
            COMMAND_BONK_DESCRIPTION: `Bonk someone's head (go to horny jail).`,
            COMMAND_BONK_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got bonked ${recNum} times and ${sender} bonked others heads ${authNum} times`,
            COMMAND_BONK_MULTIPLE: (sender, reciever) => `${bold`${sender}`} gives bonks to ${bold`${reciever}`}`,
            COMMAND_BONK_SINGLE: (sender, reciever) => `${bold`${reciever}`} got their head bonked by ${bold`${sender}`}`,
            COMMAND_BOOP_DESCRIPTION: `Give someone a cute little boop on the nose.`,
            COMMAND_BOOP_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got their nose booped ${recNum} times and ${sender} booped others ${authNum} times`,
            COMMAND_BOOP_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} get nosebooped by ${bold`${sender}`}`,
            COMMAND_BOOP_SINGLE: (sender, reciever) => `${bold`${reciever}`} got booped by ${bold`${sender}`}`,
            COMMAND_CRY_DESCRIPTION: `Cry at/because of somebody (T-T).`,
            COMMAND_CRY_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} cried ${recNum} times and ${sender} cried at others ${authNum} times`,
            COMMAND_CRY_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} hear the cries of ${bold`${sender}`}`,
            COMMAND_CRY_SELF: `cries silently`,
            COMMAND_CRY_SINGLE: (sender, reciever) => `${bold`${sender}`} cries out at ${bold`${reciever}`}`,
            COMMAND_CUDDLE_DESCRIPTION: `Give someone a cozy, warm cuddle.`,
            COMMAND_CUDDLE_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got cuddled ${recNum} times and ${sender} cuddled with others ${authNum} times`,
            COMMAND_CUDDLE_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} all cuddle with ${bold`${sender}`}`,
            COMMAND_CUDDLE_SINGLE: (sender, reciever) => `${bold`${sender}`} is embracing ${bold`${reciever}`} for cuddles`,
            COMMAND_DAB_DESCRIPTION: `Dab on the haters.`,
            COMMAND_DAB_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} dabbed ${recNum} times and ${sender} dabbed at others ${authNum} times`,
            COMMAND_DAB_MULTIPLE: (sender, reciever) => `${bold`${sender}`} dabs at ${bold`${reciever}`}`,
            COMMAND_DAB_SELF: `is dabbing`,
            COMMAND_DAB_SINGLE: (sender, reciever) => `${bold`${sender}`} is dabbing in front of ${bold`${reciever}`}`,
            COMMAND_FACEPALM_DESCRIPTION: `Facepalm yourself due to someone's stupidity.`,
            COMMAND_FACEPALM_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} facepalmed ${recNum} times and ${sender} facepalmed at others ${authNum} times`,
            COMMAND_FACEPALM_MULTIPLE: (sender, reciever) => `${bold`${sender}`} is facepalming at ${bold`${reciever}`}`,
            COMMAND_FACEPALM_SELF: `is facepalming`,
            COMMAND_FACEPALM_SINGLE: (sender, reciever) => `${bold`${sender}`} is facepalming because of ${bold`${reciever}`}`,
            COMMAND_HUG_DESCRIPTION: `Give someone a tight, loving hug (and never let them go).`,
            COMMAND_HUG_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} has been hugged ${recNum} times and ${sender} hugged others ${authNum} times`,
            COMMAND_HUG_MULTIPLE: (sender, reciever) => `${bold`${sender}`} gives hugs to ${bold`${reciever}`}`,
            COMMAND_HUG_SINGLE: (sender, reciever) => `${bold`${sender}`} is hugging ${bold`${reciever}`}`,
            COMMAND_KILL_DESCRIPTION: `Kill someone (dont worry the cops won't see you).`,
            COMMAND_KILL_FOOTER: (sender, reciever, authNum, recNum) => `${sender} killed others ${authNum} times and ${reciever} got killed ${recNum} times (how is that possible?)`,
            COMMAND_KILL_MULTIPLE: (sender, reciever) => `${bold`${sender}`} murders ${bold`${reciever}`}`,
            COMMAND_KILL_SINGLE: (sender, reciever) => `${bold`${sender}`} is trying to kill ${bold`${reciever}`}`,
            COMMAND_KISS_DESCRIPTION: `Give someone a cute kiss (^3^).`,
            COMMAND_KISS_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got kissed ${recNum} times and ${sender} kissed others ${authNum} times`,
            COMMAND_KISS_MULTIPLE: (sender, reciever) => `${bold`${sender}`} gives kisses to ${bold`${reciever}`}`,
            COMMAND_KISS_SINGLE: (sender, reciever) => `${bold`${sender}`} and ${bold`${reciever}`} are kissing`,
            COMMAND_LICK_DESCRIPTION: `Give someone a licky lick.`,
            COMMAND_LICK_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} has been licked ${recNum} times and ${sender} has licked others ${authNum} times`,
            COMMAND_LICK_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} are getting licked by ${bold`${sender}`}`,
            COMMAND_LICK_SINGLE: (sender, reciever) => `${bold`${sender}`} is licking ${bold`${reciever}`}`,
            COMMAND_LURK_DESCRIPTION: `Lurk in the distance and stare at someone, ${italic`totally not wierd`}.`,
            COMMAND_LURK_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got lurked at ${recNum} times and ${sender} lurked at others ${authNum} times`,
            COMMAND_LURK_MULTIPLE: (sender, reciever) => `${bold`${sender}`} is lurking around ${bold`${reciever}`}`,
            COMMAND_LURK_SELF: `is lurking`,
            COMMAND_LURK_SINGLE: (sender, reciever) => `${bold`${sender}`} is secretly lurking around ${bold`${reciever}`}`,
            COMMAND_NOM_DESCRIPTION: `Lightly bite someone (om nom nom).`,
            COMMAND_NOM_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got nommed on ${recNum} times and ${sender} nommed on others ${authNum} times`,
            COMMAND_NOM_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} gets nommed on by ${bold`${sender}`}`,
            COMMAND_NOM_SINGLE: (sender, reciever) => `${bold`${sender}`} is nomming on ${bold`${reciever}`}`,
            COMMAND_PANIC_DESCRIPTION: `Get panicked (aaaaaaaaaaa).`,
            COMMAND_PANIC_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} panicked ${recNum} times and ${sender} panicked at others ${authNum} times`,
            COMMAND_PANIC_MULTIPLE: (sender, reciever) => `${bold`${sender}`} is panicking at ${bold`${reciever}`}`,
            COMMAND_PANIC_SELF: `is panicking`,
            COMMAND_PANIC_SINGLE: (sender, reciever) => `${bold`${sender}`} panicked because of ${bold`${reciever}`}`,
            COMMAND_PAT_DESCRIPTION: `Give someone a pat on their head.`,
            COMMAND_PAT_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got pat ${recNum} times and ${sender} pat others ${authNum} times`,
            COMMAND_PAT_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} get pats on the head from ${bold`${sender}`}`,
            COMMAND_PAT_SINGLE: (sender, reciever) => `${bold`${sender}`} is patting ${bold`${reciever}`}`,
            COMMAND_PECK_DESCRIPTION: `Give someone a peck on the cheek.`,
            COMMAND_PECK_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got pecked ${recNum} times and ${sender} pecked others ${authNum} times`,
            COMMAND_PECK_MULTIPLE: (sender, reciever) => `${bold`${sender}`} gives pecks to ${bold`${reciever}`}`,
            COMMAND_PECK_SINGLE: (sender, reciever) => `${bold`${sender}`} gives a small peck to ${bold`${reciever}`}`,
            COMMAND_ROLEPLAY_NO_MEMBER: act => `${bold`Hey,`} you need to specify ${bold`one member`} to ${act}.`,
            COMMAND_SHOOT_DESCRIPTION: `Shoot someone ${italic`pew pew`}.`,
            COMMAND_SHOOT_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got shot at ${recNum} times and ${sender} shot at others ${authNum} times`,
            COMMAND_SHOOT_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} get shot by ${bold`${sender}`}`,
            COMMAND_SHOOT_SINGLE: (sender, reciever) => `${bold`${sender}`} is aiming for ${bold`${reciever}`}`,
            COMMAND_SHRUG_DESCRIPTION: `Shrug at someone.`,
            COMMAND_SHRUG_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} has been shrugged at ${recNum} times and ${sender} shrugged at others ${authNum} times`,
            COMMAND_SHRUG_MULTIPLE: (sender, reciever) => `${bold`${sender}`} shrugs off ${bold`${reciever}`}`,
            COMMAND_SHRUG_SELF: `is shrugging`,
            COMMAND_SHRUG_SINGLE: (sender, reciever) => `${bold`${sender}`} is shrugging ${bold`${reciever}`} off`,
            COMMAND_SIP_DESCRIPTION: `Passive-aggresively sip at someone.`,
            COMMAND_SIP_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} has been sipped with ${recNum} times and ${sender} sipped with others ${authNum} times`,
            COMMAND_SIP_MULTIPLE: (sender, reciever) => `${bold`${sender}`} sips with ${bold`${reciever}`}`,
            COMMAND_SIP_SELF: `is sipping some juice`,
            COMMAND_SIP_SINGLE: (sender, reciever) => `${bold`${sender}`} sips their juice while staring at ${bold`${reciever}`}`,
            COMMAND_SLAP_DESCRIPTION: `Give someone a big fat slap (wham).`,
            COMMAND_SLAP_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got slapped ${recNum} times and ${sender} slapped others ${authNum} times`,
            COMMAND_SLAP_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} get slapped by ${bold`${sender}`}`,
            COMMAND_SLAP_SINGLE: (sender, reciever) => `${bold`${sender}`} is slapping ${bold`${reciever}`}`,
            COMMAND_SLEEP_DESCRIPTION: `Go to sleep (ya seriously need it)`,
            COMMAND_SLEEP_FOOTER: (sender, reciever, authNum, recNum) => `${sender} has fallen asleep ${authNum} times and ${reciever} has been slept with ${recNum} times`,
            COMMAND_SLEEP_MULTIPLE: (sender, reciever) => `${bold`${sender}`} is sleeping with ${bold`${reciever}`}`,
            COMMAND_SLEEP_SELF: `is going to sleep`,
            COMMAND_SLEEP_SINGLE: (sender, reciever) => `${bold`${sender}`} is sleeping on ${bold`${reciever}`}`,
            COMMAND_STAB_DESCRIPTION: `Poke a knife at someone very hard (caution: there will be blood).`,
            COMMAND_STAB_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got stabbed ${recNum} times (ouch) and ${sender} stabbed others ${authNum} times`,
            COMMAND_STAB_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} are being stabbed by ${bold`${sender}`}`,
            COMMAND_STAB_SINGLE: (sender, reciever) => `${bold`${sender}`} is poking ${bold`${reciever}`} with a knife`,
            COMMAND_STARE_DESCRIPTION: `Just stare at someone.`,
            COMMAND_STARE_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got stared at ${recNum} times and ${sender} stared at others ${authNum} times`,
            COMMAND_STARE_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} notice that ${bold`${sender}`} is starring`,
            COMMAND_STARE_SELF: `is staring`,
            COMMAND_STARE_SINGLE: (sender, reciever) => `${bold`${sender}`} is staring at ${bold`${reciever}`}`,
            COMMAND_TEASE_DESCRIPTION: `Tease someone. :p`,
            COMMAND_TEASE_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got teased ${recNum} times and ${sender} teased others ${authNum} times`,
            COMMAND_TEASE_MULTIPLE: (sender, reciever) => `${bold`${reciever}`} are teased by ${bold`${sender}`}`,
            COMMAND_TEASE_SELF: `is teasing`,
            COMMAND_TEASE_SINGLE: (sender, reciever) => `${bold`${sender}`} is being a tease to ${bold`${reciever}`}`,
            COMMAND_WAVE_DESCRIPTION: `Wave someone hello/goodbye.`,
            COMMAND_WAVE_FOOTER: (sender, reciever, authNum, recNum) => `${reciever} got waved at ${recNum} times and ${sender} waved at others ${authNum} times`,
            COMMAND_WAVE_MULTIPLE: (sender, reciever) => `${bold`${sender}`} is waving at ${bold`${reciever}`}`,
            COMMAND_WAVE_SELF: `is waving`,
            COMMAND_WAVE_SINGLE: (sender, reciever) => `${bold`${sender}`} is waving at ${bold`${reciever}`}`,

            // Secret Commands
            COMMAND_ARI_DESCRIPTION: `The cutestpie tall boy.`,
            COMMAND_ASH_DESCRIPTION: ``,
            COMMAND_DEI_DESCRIPTION: `Unironically writing a fanfiction about U.S. representative Raúl Grijalva.`,
            COMMAND_JUSTIN_DESCRIPTION: `Big brother beaver boy.`,
            COMMAND_JUSTIN_NAME: (user, name) => `${bold`Here is the full name of`} ${user}:\n${italic`${name}`}`,
            COMMAND_RAIN_DESCRIPTION: `An actual cat ${italic`pat pat`}.`,
            COMMAND_REESE_DESCRIPTION: `The bot dev's real name.`,
            COMMAND_RUFF_DESCRIPTION: `The bot dev.`,
            COMMAND_SAMI_DESCRIPTION: `Is 4'3`,
            COMMAND_STRAX_DESCRIPTION: `Too smol brain for braincells.`,

            // Settings Commands
            COMMAND_ANTI: (use, enabled) => `${bold`Done,`} ${enabled ? `started filtering` : `stopped filtering`} ${bold`anti-${use}${['copypasta', 'gift', 'image', 'invite', 'link'].includes(use) ? 's' : ''}`}`,
            COMMAND_ANTI_CONFIRM: `${bold`Hey,`} are you sure you want to clear all ${bold`anti`} settings on this server?`,
            COMMAND_ANTI_DESCRIPTION: `Configure my automod (anti) settings in your server by specifying what I should filter out for example: ${code`fox anti invites on`} will turn Discord invite filtering on.\nThe list of current antis includes: ${code`invite`}, ${code`gift`}, and ${code`uppercase`}.`,
            COMMAND_ANTI_ENABLED1: name => `${granted} Filtering ${bold`${name}${['copypasta', 'link'].includes(name) ? `s.` : ''}`}${['profanity', 'duplicates'].includes(name) ? '.' : ['copypasta', 'link'].includes(name) ? '' : ' links.'}`,
            COMMAND_ANTI_ENABLED2: name => `${granted} Removing ${bold`${name}`} names.`,
            COMMAND_ANTI_GUILD: guild => underline`Foxxie's automod settings in ${bold`${guild}`}:`,
            COMMAND_ANTI_NONE: `This server currently has no ${bold`anti settings`} configured.`,
            COMMAND_ANTI_NOSETTING: `${bold`Whoops,`} you need to provide a proper setting [On|Off].`,
            COMMAND_EXEMPT: (name, type) => `${notSpecified} ${bold`${name}`} is exempt as a ${bold`${type}`}.`,
            COMMAND_EXEMPT_DESCRIPTION: `Allows you to add users, channels, or roles to be ignored by my ${code`anti`} automod features. To remove from this list try out the ${code`unexempt`} command.`,
            COMMAND_EXEMPT_DUPLICATE: (name, type) => `${bold`${name}`} is already an exempt ${bold`${type.substring(0, type.length -1)}`}.`,
            COMMAND_EXEMPT_GUILD: guild => underline`Foxxie's exempt settings in ${bold`${guild}`}.`,
            COMMAND_RERO_ADDED: `${bold`Done,`} successfully added the reaction role to the message.`,
            COMMAND_RERO_DESCRIPTION: `Allows you to configure reaction roles in your server. Specify ${code`add`} to add them, simply provide the role it should be for, then react to the message it should be attached to, I'll make a reaction role on that message with the emoji you reacted with. Specify ${code`remove`} to remove a reaction role using it's message Id and the Role attached to it.`,
            COMMAND_RERO_EXIST: `This ${bold`role`} is already a reaction role on this message.`,
            COMMAND_RERO_INVALIDEMOJI: `${bold`Uh oh,`} there was an issue with the given emoji.`,
            COMMAND_RERO_NOACTION: `${bold`Please,`} specify either [add | remove].`,
            COMMAND_RERO_NOEMOJI: `${bold`Whoops,`} you didn't react to message with an emoji.`,
            COMMAND_RERO_NOMESSAGEID: `You need to specify a ${bold`message Id`} to remove a reaction from.`,
            COMMAND_RERO_NOROLE: `${bold`You need`} a role for this reaction role`,
            COMMAND_RERO_QUERYEMOJI: `${bold`Please react`} to a message with an emoji for the given role.`,
            COMMAND_RERO_REMOVED: plural => `${bold`Done,`} removed ${plural ? 'all reaction roles' : 'the reaction role'} from the message.`,
            COMMAND_TAG_ADDED: (tag, content) => `${bold`Done,`} added the tag ${code`${tag}`} with the content:${Util.codeBlock('js', content)}`,
            COMMAND_TAG_LIST: (guild, size) => `${bold`Tags in ${guild}`} (${size})`,
            COMMAND_TAG_NOTAGS: `${bold`Hmmm,`} it doesn't seem like there are any tags configured in this server`,
            COMMAND_TAGREGEX_BADREGEX: err => `${bold`Uh oh,`} you provided an invalid regular expression pattern: ${Util.codeBlock('js', err)}`,
            COMMAND_TAGREGEX_DESCRIPTION: `Create regular expression tags for me to respond to in certain guilds. This command is locked to the bot owner due to the power it holds.`,
            COMMAND_TAGREGEX_EMPTY: `You didn't provide any ${bold`regular expression`} to make a tag of.`,
            COMMAND_UNEXEMPT_DESCRIPTION: `Allows you to remove users, channels, or roles from being ignored by my ${code`anti`} automod features. To add to this list try out the ${code`exempt`} command.`,
            COMMAND_UNEXEMPT_NOEXIST: (name, type) => `${bold`${name}`} is currently not an exempt ${bold`${type.substring(0, type.length -1)}`}.`,

            // Util Commands
            COMMAND_ABOUT_COMMANDS_TITLE: bold`Commands`,
            COMMAND_ABOUT_COMMANDS_VALUE: (commands, aliases) => `• As of now, I have ${bold`${commands}`} commands and ${bold`${aliases}`} aliases.`,
            COMMAND_ABOUT_CREATED_TITLE: bold`Created`,
            COMMAND_ABOUT_CREATED_VALUE: (date, duration) => `• I was created on ${date}. ${bold`(${duration} ago)`}`,
            COMMAND_ABOUT_CREDITS_TITLE: bold`Credits`,
            COMMAND_ABOUT_CREDITS_VALUE: `• Developer: ${developer}\n• Spanish Translations: ${spanishTranslation}\n• Additional Help: ${additionalHelp}`,
            COMMAND_ABOUT_DESCRIPTION: `Get some basic information about me, my statistics, and some of my credits.`,
            COMMAND_ABOUT_GUILDS_TITLE: bold`Guilds`,
            COMMAND_ABOUT_GUILDS_VALUE: guilds => `• I'm looking after ${bold`${guilds}`} servers.`,
            COMMAND_ABOUT_SUMMARY: `I started as a developmental project by **Ruffpuff#0017** to learn basic node.js and javascript. Then I was added to his server **The Corner Store** as a way to overall reduce the amount of bots. Now I'm hoping to be added to many guilds and maybe I could be helpful to ya.`,
            COMMAND_ABOUT_TITLE: name => `About ${name}!`,
            COMMAND_ABOUT_USERS_TITLE: bold`Users`,
            COMMAND_ABOUT_USERS_VALUE: users => `• Right now I'm cleaning up after ${bold`${users}`} users.`,
            COMMAND_ABOUT_VERSION_TITLE: bold`Version`,
            COMMAND_ABOUT_VERSION_VALUE: `• Currently I'm in version ${bold`${version}`}, pretty much always getting worked on though ;)`,
            COMMAND_AFK_AUTHOR: author => `${author} has set an AFK`,
            COMMAND_AFK_DESCRIPTION: `Sets an AFK for when people ping ya, I'll remember the message you set and display it when someone is trying to reach you.`,
            COMMAND_AFK_REASON: reason => `${bold`Reason`}: ${reason}`,
            COMMAND_AVATAR_DESCRIPTION: `Gets you an image of any user's avatar.`,
            COMMAND_AVATAR_FOXXIE: bold`Here is my cool avatar, trust me I know I look\ngorgeous but this is all thanks to\nLunaSpyker#1247`,
            COMMAND_BADGES_BOOSTS: boosts => `Boost${boosts > 1 ? 's' : ''}`,
            COMMAND_BADGES_BALANCE: `House Balance`,
            COMMAND_BADGES_BOT: (bots, varif) => `Bot${bots - varif > 1 ? 's' : ''}`,
            COMMAND_BADGES_BOTDEV: devs => `Early Verified Bot Developer${devs > 1 ? 's' : ''}`,
            COMMAND_BADGES_BOTVERIFIED: verified => `Verified Bot${verified > 1 ? 's' : ''}`,
            COMMAND_BADGES_BRAVERY: `House Bravery`,
            COMMAND_BADGES_BRILLIANCE: `House Brilliance`,
            COMMAND_BADGES_BUG1: `Bug Hunter Level 1`,
            COMMAND_BADGES_BUG2: `Bug Hunter Level 2`,
            COMMAND_BADGES_DESCRIPTION: `Gives a rough estimate for how many user badges there are in a server. Although right now, due to Discord's limitations this command only works in servers with 1,000 members or less.`,
            COMMAND_BADGES_DISCORD_EMPLOYEE: flag => `Discord Employee${flag > 1 ? 's' : ''}`,
            COMMAND_BADGES_EARLY: supporters => `Early Supporter${supporters > 1 ? 's' : ''}`,
            COMMAND_BADGES_GUILDSIZE: size => `${bold`Sorry,`} requesting badges from this server is limited by Discord due to it's size, this server needs ${size-1000} members less for this command to work.`,
            COMMAND_BADGES_HYPE_EVENT: `HypeSquad Events`,
            COMMAND_BADGES_NITRO: `Nitro`,
            COMMAND_BADGES_PARTNERED: flag => `Partnered Server Owner${flag > 1 ? 's' : ''}`,
            COMMAND_BUGREPORT_DESCRIPTION: `Allows you to report a bug to the bot developer, please describe the bug along with the command that caused it. Please note that any joke reports could lead to a user or guild blacklist.`,
            COMMAND_BUGREPORT_NOBUG: `${bold`Hey!`} you didnt provide a bug to report. Respond with a bug in ${bold`60 seconds`} or send ${code`cancel`} to cancel.`,
            COMMAND_COLOR: color => `Preview of the color ${color}`,
            COMMAND_COLOR_DESCRIPTION: `I'll fetch you a image preview of any hex code, for example ${code`#f5c1bf`}.`,
            COMMAND_COLOR_NOCOLOR: `${bold`Please,`} specify a proper hex color code.`,
            COMMAND_CORONA_CASES_TITLE: bold`${cases} Cases`,
            COMMAND_CORONA_CASES_VALUE: stats => `${bold`${stats.cases ? stats.cases.toLocaleString() : 'N/A'}`} ${stats.todayCases ? `(+${stats.todayCases.toLocaleString()} today)` : ''}\n${stats.critical ? stats.critical.toLocaleString() : 'N/A'} critical\n${stats.casesPerOneMillion? `${(stats.casesPerOneMillion / 10000).toFixed(2)}%` : 'N/A'} absolute infection rate`,
            COMMAND_CORONA_DEATHS_TITLE: bold`${deaths} Deaths`,
            COMMAND_CORONA_DEATHS_VALUE: stats => `${bold`${stats.deaths ? stats.deaths.toLocaleString() : 'N/A'}`} ${stats.todayDeaths ? `(+${stats.todayDeaths.toLocaleString()} today)` : ''}\n${stats.cases && stats.deaths ? `${((stats.deaths / stats.cases) * 100).toFixed(2)}%` : 'N/A'}% case fatality rate\n${stats.deathsPerOneMillion ? `${(stats.deathsPerOneMillion / 10000).toFixed(2)}%` : 'N/A'}% absolute fatality rate`,
            COMMAND_CORONA_DESCRIPTION: `Get the current statistics of the Covid-19 pandemic. You can enter a country name, US-state name, or \`global\` for statistics of the whole world.`,
            COMMAND_CORONA_EMBED_TITLE: search => `COVID-19 stats / ${search.toUpperCaseFirst()}`,
            COMMAND_CORONA_EMBED_FOOTER: `Gotta tell ya that these stats may not necessarily comprehensive, complete, or up to date.\nDon't go tryna use this as medical advise or anything.`,
            COMMAND_CORONA_NO_DATA: search => `${bold`Sorry,`} I couldn't find any data for \`${search}\`.`,
            COMMAND_CORONA_RECOVERIES_TITLE: bold`${recoveries} Recoveries`,
            COMMAND_CORONA_RECOVERIES_VALUE: stats => `${bold`${stats.recovered ? stats.recovered.toLocaleString() : 'N/A'}`}\n${stats.recovered && stats.cases ? `${((stats.recovered / stats.cases) * 100).toFixed(2)}%` : 'N/A'} case recovery rate`,
            COMMAND_CORONA_TESTS_TITLE: bold`${tests} Tests`,
            COMMAND_CORONA_TESTS_VALUE: stats => `${bold`${stats.tests ? stats.tests.toLocaleString() : 'N/A'}`}\n${stats.testsPerOneMillion ? `${(stats.testsPerOneMillion / 10000).toFixed(2)}%` : 'N/A'} of population tested`,
            COMMAND_DEFINE_DESCRIPTION: `I'll fetch you the definition of a term using the Merriam-Webster Dictionary API.`,
            COMMAND_DEFINE_NOARGS: `${bold`Hey!`} You didn't provide a word to define. Respond with a word in ${bold`60 seconds`} or send ${code`cancel`} to cancel.`,
            COMMAND_DEFINE_NORESULTS: word => `${bold`Sorry,`} I couldn't find a definition for the word ${code`${word}`}.`, 
            COMMAND_EMBED_DESCRIPTION: `Allows ya to create simple embeds using built in JSON syntax. Formatted like: ${code`{ \"title\": \"Embed Title\", \"description\": \"Embed Description\" }`} this format can be confusing for some, so we suggest you use the embed builder at https://embedbuilder.yua.gg. You can also supply a channel to send the embed to before the JSON.`,
            COMMAND_EMBED_ERROR: `${bold`Uh oh,`} there seems to be an error with your embed format. Try making sure everything is correct or you could just copy paste from: <https://embedbuilder.yua.gg>.`,
            COMMAND_EMBED_NOARGS: `${bold`Please,`} specify JSON to create an embed.`,
            COMMAND_HELP_CATEGORY: `Command Category`,
            COMMAND_HELP_DESCRIPTION: `Get example usage and descriptions of all of my commands. Run ${code`help usage`} for a further explaination on the help command.`,
            COMMAND_HELP_EXPLAINER: prefix => [
                `With my ${code`help`} command you can get information about any of my commands straight from Discord.`,
                `To get a short overview of any command just run ${code`${prefix}help [Command]`}\n`,
                `The syntax for usage is very simple aswell:`,
                `Square brackets ${code`[]`} indicate an argument is required, parenthesis ${code`()`} indicate an argument is optional, and a pipe ${code`|`} between arguements indicates that you can choose between the two.\n`,
                `If you need any further help be sure to join my [support server](${supportServer}).`
            ].join('\n'),
            COMMAND_HELP_MENU: (prefix, count) => `These are all of my commands, right now I have ${count}. For additional info on a certain one of them just do ${code`${prefix}help (command)`}.`,
            COMMAND_HELP_NOTVALID: `${bold`Sorry,`} that doesn't seem to be one of my commands.`,
            COMMAND_HELP_PERMISSIONS: `Required Permissions`,
            COMMAND_HELP_SERVERONLY: `Server Only`,
            COMMAND_HELP_TITLE: name => `${name}'s Commands!`,
            COMMAND_HELP_USAGE: `Usage`,
            COMMAND_INFO: `${bold`Whoops`}, the ID you provided doesn't give me any information to show.`,
            COMMAND_INFO_DESCRIPTION: `I can get you information on basically anything on Discord, from users to roles, channels, emojis, even your server.`,
            COMMAND_INFO_CHANNEL_BITRATE: bold`:pager: Bitrate`,
            COMMAND_INFO_CHANNEL_CATEGORY: bold`:dividers: Category`,
            COMMAND_INFO_CHANNEL_CATEGORYTYPE: (parent, name) => parent ? name : 'None',
            COMMAND_INFO_CHANNEL_COOLDOWN: bold`:alarm_clock: Chat Cooldown`, 
            COMMAND_INFO_CHANNEL_CREATED: (name, date, duration) => `${name} was created on ${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_CHANNEL_ISNSFW: nsfw => nsfw ? 'Yes' : 'No',
            COMMAND_INFO_CHANNEL_SLOWMODE: (zero, limit) => zero ? 'None' : limit,
            COMMAND_INFO_CHANNEL_TOPIC: bold`:information_source: Topic`, 
            COMMAND_INFO_CHANNEL_TYPE: bold`:scroll: Type`,
            COMMAND_INFO_CHANNEL_USERLIMIT: bold`:busts_in_silhouette: User Limit`,
            COMMAND_INFO_CHANNEL_USERLIMITNUMBER: (zero, limit) => zero ? 'Infinite' : limit,
            COMMAND_INFO_EMOJI_ANIMATED: bold`:projector: Animated`,
            COMMAND_INFO_EMOJI_ANIMATEDVALUE: animated => animated ? 'Yes' : 'No',
            COMMAND_INFO_EMOJI_CREATED: (name, date, duration) => `${name} was created on ${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_EMOJI_LINKS: bold`:link: Image Links`,
            COMMAND_INFO_EMOJI_NAME: bold`:pencil2: Name`,
            COMMAND_INFO_ROLE_COLOR: bold`:art: Color`,
            COMMAND_INFO_ROLE_COLORHEX: (color, hex) => color ? hex : 'None',
            COMMAND_INFO_ROLE_CREATED: bold`:calendar: Created`,
            COMMAND_INFO_ROLE_CREATEDDATE: (date, duration) => `${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_ROLE_MEMBERS: (members, size) => bold`:people_hugging: Member${size === 1 ? '' : 's'} ${members ? `(${size})` : ''}`,
            COMMAND_INFO_ROLE_PARTITION: (size, humans, bots) => size ? `${humans} users, ${bots} bots` : 'None',
            COMMAND_INFO_ROLE_PERMISSIONS: bold`:hammer: Permissions`,
            COMMAND_INFO_ROLE_PERMISSIONSMAP: (admin, map) => admin ? `Administrator (all permissions)` : map || 'None',
            COMMAND_INFO_ROLE_PROPERTIES: bold`:bookmark_tabs: Properties`,
            COMMAND_INFO_ROLE_PROPERTIESARRAY: (hoist, mention, manage, role) => [
                hoist ? `${granted} displayed seperately` : `${notSpecified} not displayed seperately`,
                mention ? `${granted} mentionable as ${role}` : `${notSpecified} not mentionable`,
                manage ? `${granted} configurable` : `${notSpecified} managed by an integration`
            ].join('\n'),
            COMMAND_INFO_SERVER_CHANNELS: size => bold`:speech_balloon: Channel${size === 1 ? `` : 's'} ${size > 0 ? `(${size})` : ''}`,
            COMMAND_INFO_SERVER_CHANNELSSIZE: (some, text, voice) => some ? `Text: ${bold`${text}`}\nVoice: ${bold`${voice}`}` : 'None',
            COMMAND_INFO_SERVER_CREATED: (owner, date, duration) => `Created by ${bold`${owner}`} on ${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_SERVER_EMOJIS: size => bold`:sunglasses: Emoji${size === 1 ? '' : 's'} ${size > 0 ? `(${size})` : ''}`,
            COMMAND_INFO_SERVER_EMOJISSIZE: (some, still, animated) => some ? `Static: ${bold`${still}`}\nAnimated: ${bold`${animated}`}` : `None`,
            COMMAND_INFO_SERVER_MEMBERCOUNT: (size, cache) => `${size} (cached: ${cache})`,
            COMMAND_INFO_SERVER_MESSAGES: msgs => `${msgs} messages sent`,
            COMMAND_INFO_SERVER_MEMBERS: bold`:busts_in_silhouette: Members`,
            COMMAND_INFO_SERVER_OWNER: bold`:crown: Owner`,
            COMMAND_INFO_SERVER_REGION: bold`:map: Region`,
            COMMAND_INFO_SERVER_ROLES: bold`:scroll: Roles`,
            COMMAND_INFO_SERVER_ROLESSIZE: (some, size) => some ? size : 'None',
            COMMAND_INFO_SERVER_SECURITY: bold`:lock: Security`,
            COMMAND_INFO_SERVER_SECURITYARRAY: (veri, filter) => [
                `Verification level: ${veri}`,
                `Explicit filter: ${filter}`
            ].join('\n'),
            COMMAND_INFO_SERVER_STATISTICS: bold`:bar_chart: Statistics`,
            COMMAND_INFO_USER_DISCORDJOIN: (date, duration) => `Joined Discord on ${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_USER_GLOBALBANS: bans => bold`:mag: Global Ban${bans === 1 ? '' : 's'} ${bans > 1 ? `(${bans.toLocaleString()})` : ''}`,
            COMMAND_INFO_USER_GUILDCREATE: (server, date, duration) => `Created ${server} on ${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_USER_GUILDJOIN: (server, date, duration) => `Joined ${server} on ${date} ${bold`(${duration} ago)`}`,
            COMMAND_INFO_USER_MESSAGES: messages => `${messages.toLocaleString()} message${messages === 1 ? '' : 's'} sent.`,
            COMMAND_INFO_USER_NOTES: notes => bold`:label: Note${notes === 1 ? '' : 's'} ${notes > 1 ? `(${notes.toLocaleString()})` : ''}`,
            COMMAND_INFO_USER_ROLES: size => bold`:scroll: Role${size}`,
            COMMAND_INFO_USER_STATISTICS: stars => bold`:pencil: Statistics ${stars ? `:dizzy: ${stars.toLocaleString()}` : ''}`,
            COMMAND_INFO_USER_WARNINGS: warnings => bold`:lock: Warning${warnings === 1 ? '' : 's'} ${warnings > 1 ? `(${warnings.toLocaleString()})` : ''}`,
            COMMAND_INVITE_DESCRIPTION: `Get the some important links, like to invite me, the invite to my support server, and the link to vote for me.`,
            COMMAND_INVITE_LINKS: (name, link) => [
                `[Invite ${name}](${link})`,
                `[Support](${supportServer})`,
                `[Community](${communityServer})`,
                `[Vote](${topggURL})`
            ].join(' | '),
            COMMAND_INVITE_TITLE: `Hey hey, here's some useful links`,
            // math
            COMMAND_PING: `Ping?`,
            COMMAND_PING_DESCRIPTION: `Runs a connection test to Discord.`,
            COMMAND_PINGPONG: (total, discord, ws) => `🏓 ${bold`Pong!`} Took ${bold`${total}`}ms (Discord latency: ${bold`${discord}`}ms. Network latency: ${bold`${ws}`}ms.)`,
            COMMAND_POLL_DESCRIPTION: `Create a poll so members of your server can vote. Options of the poll should be separated by commas, and the title can be set using ${code`title=`}.`,
            COMMAND_POLL_FOOTER: `React to the emojis below to vote.`,
            COMMAND_POLL_OPTIONS: `For a poll you need at least ${bold`two`} and no more than ${bold`ten`} options.`,
            COMMAND_POLL_TITLE: author => `Poll by ${author}`,
            COMMAND_REDEEM_DESCRIPTION: `Redeem a key for a profile badge on your ${code`info`} profile card.`,
            COMMAND_REDEEM_NOEXIST: `${bold`Sorry,`} this key has either already been redeemed or doesn't exist.`,
            COMMAND_REDEEM_NOKEY: `${bold`Hey,`} you need to specify a key to redeem.`,
            COMMAND_REDEEM_SUCCESS: (icon, title) => `${bold`Congrats,`} I successfully redeemed ${icon} ${title}.`,
            COMMAND_REMINDME_DESCRIPTION: `Set a reminder that will send straight to your dms at the specifed time. Time formatting should be like ${code`2m`} for two minutes, or ${code`90m`} for an hour and a half.`,
            COMMAND_REMINDME_INVALIDTIME: `${bold`Please,`} specify a proper time format [2s|2m|2h|2d|2w].`,
            COMMAND_REMINDME_NOREASON: `${bold`Please,`} give a reason for your reminder.`,
            COMMAND_REMINDME_SUCCESS: time => `${bold`Success,`} I'll send you that reminder in ${bold`${time}`}.`,
            COMMAND_SETCOLOR_DESCRIPTION: `I'll set a provided role's color for you based on a provided hex code.`,
            COMMAND_SETCOLOR_INVALIDCOLOR: `${bold`Sorry,`} that color is either not supported or in an incorrect format.`,
            COMMAND_SETCOLOR_NOPERMS: `${bold`Whoops,`} I don't have permissions to set the color of that role.`,
            COMMAND_SETCOLOR_NOROLE: `${bold`Hey,`} please provide a role to set the color of.`,
            COMMAND_SHORTEN_DESCRIPTION: `Shorten a long link into a tiny one, even provide your own name if desired.`,
            COMMAND_SHORTEN_ERROR: name => `${bold`Sorry,`} the provided name ${bold`${name}`} is already in use at the domain "is.gd".`,
            COMMAND_SHORTEN_NOARGS: `${bold`Please,`} specify a ${bold`link`} you want to shorten.`,
            COMMAND_SHORTEN_SUCCESS: url => `${bold`Success,`} here is your new shortened url: <${url}>.`,
            COMMAND_STATS: (name, memUsage, memTotal, memPercentage, cpuUsage, cpuCount, cpuSpeed, uptime, foxxieVersion, discordVersion, processVersion, hostname, currentShard, totalShards) => [
                `${name} is currently using`,
                `• ${bold`${memPercentage}% of RAM`} (${memUsage} / ${memTotal} MB) and`,
                `• ${bold`${cpuUsage}% of CPU`} (${cpuCount}c @ ${cpuSpeed}GHz).`,
                `I've been running`,
                `• For ${bold`${uptime}`} on ${bold`${hostname}`} (shard ${currentShard} / ${totalShards})`,
                `• Using Node.js ${processVersion}, Discord.js v${discordVersion}, and Foxxie-Util v${foxxieVersion}.`
            ].join('\n'),
            COMMAND_STATS_DESCRIPTION: 'Provides some details about me and my stats.',
            COMMAND_STEAL_DESCRIPTION: `Steals a provided emoji and automatically adds it to your server. You can also provide a name for the emoji to automatically be named.`,
            COMMAND_STEAL_MAXEMOJI: `${bold`Uh oh,`} I can't steal anymore emojis because this server is already at the max it can have.`,
            COMMAND_STEAL_NOEMOJI: `${bold`Hey,`} I can only steal proper emojis.`,
            COMMAND_STEAL_SUCCESS: name => `Stole ${name}`,
            COMMAND_WEATHER_DATE: `${date} ${bold`Date`}`,
            COMMAND_WEATHER_DAY: `${dayCurrent} ${bold`Day`}`,
            COMMAND_WEATHER_DEGREES_F: input => `${input} Degrees°F`,
            COMMAND_WEATHER_DESCRIPTION: `I can get ya the weather from a specified city including humidity, temperature, winds, and more.`,
            COMMAND_WEATHER_ERROR: `Please enter a valid ${bold`city`} or ${bold`location`} for me to get the proper weather.`,
            COMMAND_WEATHER_FEELS: `${feels} ${bold`Feels like`}`,
            COMMAND_WEATHER_HUMID: `${humidity} ${bold`Humidity`}`,
            COMMAND_WEATHER_TEMPERATURE: `${temperature} ${bold`Temperature`}`,
            COMMAND_WEATHER_TITLE: (local, sky) => `${local} (Weather: ${sky})`,
            COMMAND_WEATHER_TIMEZONE: `${timezone} ${bold`Timezone`}`,
            COMMAND_WEATHER_WINDS: `${winds} ${bold`Winds`}`,
            COMMAND_WOLFRAM_DESCRIPTION: `I'll get you data for a search term using the Wolfram|Alpha API.`,
            COMMAND_WOLFRAM_NOARGS: `${bold`Whoops,`} remember you need to specify a ${bold`search term`}.`,
            COMMAND_WOLFRAM_NODATA: `${bold`Sorry,`} I couldn't find any data for that search term.`,

            // Events
            EVENT_GUILDMEMBERADD_DEFAULT: member => `${member} just joined the server!`,
            EVENT_GUILDMEMBERADD_UPPERCASE_REASON: `Running anti uppercase filter on member's username.`,
            EVENT_GUILDMEMBERREMOVE_DEFAULT: member => `${bold`${member}`} just left the server :(`,
            EVENT_GUILDMEMBERUPDATE_AUTOROLE_REASON: `Recieved set autoroles after passing member gate.`,
            EVENT_GUILDMEMBERUPDATE_UPPERCASE_REASON: `Running anti uppercase filter on member's nickname.`,
            EVENT_MESSAGEREACTIONADD_RERO_REASON: `Member added reaction to reaction role.`,
            EVENT_MESSAGEREACTIONREMOVE_RERO_REASON: `Member removed reaction from reaction role.`,
            EVENT_STARCREATED_DESCRIPTION: (user, channel, link) => `A message by ${user} got starred enough to make it into the ${channel}.\nCheck it out [here](${link})`,
            EVENT_STARCREATED_MESSAGE: 'Jump to Message',
            EVENT_STARCREATED_TITLE: ':star: A new message made it into the starboard :star:',

            // Inhibitors
            INHIBITOR_PERMISSIONS_AUTHOR: perm => `${bold`You don't`} have permission to run this command, you need the ${bold`${perm}`} permission.`,
            INHIBITOR_PERMISSIONS_GUILDOWNER: `${bold`Nope,`} due to the harm this command can cause it can only be executed by the guild owner.`,

            // Monitors
            MONITOR_AFK_AUTHOR: author => `${author} is set as AFK`,
            MONITOR_AFK_DESCRIPTION: (reason, time) => `${bold`${time}`} ago with the reason: ${bold`${reason}`}`,
            MONITOR_AFKCHECK_WELCOMEBACK: `Hey, welcome back I'll remove that afk for you.`,

            // Tasks
            TASK_DISBOARD: `Reminder to Bump`,
            TASK_DISBOARD_DEFAULT: `Time to bump the server on disboard. Use the command ${code`!d bump`} and I'll notify you in ${bold`two hours`}.`,
            TASK_ENDTEMPBAN_REASON: `Temporary ban expired.`,
            TASK_ENDTEMPMUTE_REASON: `Temporary mute expired.`,
            TASK_REMINDER: (time, message) => `Hey there, here's that reminder you scheduled ${bold`${time}`} ago for: ${bold`${message}`}`,
            TASK_REMINDER_AUTHOR: author => `Reminder For ${author}`,
            TASK_REMINDER_SENDIN: (time, message) => `${bold`${time} ago`} you wanted me to remind you: ${message}`,

            // Logging
            LOG_ACTION_DELETE: `Message Deleted`,
            LOG_ACTION_EDIT: `Message Edited`,
            LOG_ACTION_MEMBERJOINED: `Member Joined`,
            LOG_ACTION_MEMBERLEFT: `Member Left`,
            LOG_ACTION_NUKE: `Channel Nuked`,
            LOG_ACTION_TEMPBAN: multiple => `Temporarily Banned User${multiple ? 's' : ''}`,
            LOG_ACTION_TEMPUNBAN: multiple => `Removed Temporary Ban from User${multiple ? 's' : ''}`,
            LOG_ACTION_TEMPUNMUTE: plural => `Temporary Mute${plural ? 's' : ''} Expired`,
            LOG_ACTION_VCKICK: multiple => `Kicked User${multiple ? 's' : ''} from vc.`,
            LOG_ACTION_VCMUTE: multiple => `Muted User${multiple ? 's' : ''} in vc.`,
            LOG_ACTION_VCUNMUTE: multiple => `Unmuted User${multiple ? 's' : ''} in vc.`,
            LOG_ACTION_WARN: multiple => `Warned User${multiple ? 's' : ''}`,

            LOG_ARGS_ATTACHMENTS: attachments => `${bold`Attachments`}: ${attachments.join(` | `)}`,
            LOG_ARGS_CHANNEL: (mention, id) => `${bold`Location`}: ${mention} (ID: ${id})`,
            LOG_ARGS_DATE: date => `${bold`Date`}: ${date}`,
            LOG_ARGS_DURATION: duration => `${bold`Duration`}: ${duration}`,
            LOG_ARGS_IMAGES: `Image`,
            LOG_ARGS_LINK: link => `${bold`Link`}: [Here](${link})`,
            LOG_ARGS_MEMBER: (name, mention, id) => `${bold`Member`}: ${name} ${mention} (ID: ${id})`,
            LOG_ARGS_MESSAGE: content => `${bold`Message`}: ${content}`,
            LOG_ARGS_MESSAGES: (oldContent, newContent) => [
                `${bold`Before`}: ${oldContent}`,
                `${bold`After`}: ${newContent}`,
            ].join(oldContent.length > 45 ? '\n\n' : '\n'),
            LOG_ARGS_MODERATOR: (tag, mention, id) => `${bold`Moderator`}: ${tag} ${mention} (ID: ${id})`,
            LOG_ARGS_REASON: reason => `${bold`Reason`}: ${reason}`,
            LOG_ARGS_USER: (tag, mention, id) => `${bold`User`}: ${tag} ${mention} (ID: ${id})`,
            LOG_ARGS_USERS: users => `${bold`Users`}:\n${users}\n`,
            LOG_ARGS_WARN: (reason, time, tag, author, id) => `${bold`Warn`}: ${reason}\non ${time}\nBy: ${tag} ${author} (ID: ${id})`,
            LOG_ARGS_WARNS: warns => `${bold`Warns`}: ${warns}`,

            LOG_DM_TEMPBAN: `You have been temporarily banned`,
            LOG_DM_TEMPUNBAN: `Your temporary ban has expired`,
            LOG_DM_TEMPUNMUTE: 'You temporary mute has expired',
            LOG_DM_VCKICK: `You have been kicked from vc`,
            LOG_DM_VCMUTE: `You have been muted in vc`,
            LOG_DM_VCUNMUTE: `You have been unmuted in vc`,
            LOG_DM_WARN: `You have been warned`,

            LOG_MODERATION_INVITE: `Server invite link.`,
            LOG_MODERATION_GIFT: `Nitro gift link.`,
            LOG_MODERATION_NOREASON: `No reason specified.`,

            // Discord
            DISCORD_FILTERLEVELS: {
                DISABLED: "Don't scan any messages",
                MEMBERS_WITHOUT_ROLES: 'Scan messages from members without a role',
                ALL_MEMBERS: 'Scan messages by all members'
            },

            DISCORD_PERMISSIONS: {
                ADMINISTRATOR: 'Administrator',
                VIEW_AUDIT_LOG: 'View Audit Log',
                MANAGE_GUILD: 'Manage Server',
                MANAGE_ROLES: 'Manage Roles',
                MANAGE_CHANNELS: 'Manage Channels',
                KICK_MEMBERS: 'Kick Members',
                BAN_MEMBERS: 'Ban Members',
                CREATE_INSTANT_INVITE: 'Create Instant Invite',
                CHANGE_NICKNAME: 'Change Nickname',
                MANAGE_NICKNAMES: 'Manage Nicknames',
                MANAGE_EMOJIS: 'Manage Emojis',
                MANAGE_WEBHOOKS: 'Manage Webhooks',
                VIEW_CHANNEL: 'Read Text Channels and See Voice Channels',
                SEND_MESSAGES: 'Send Messages',
                SEND_TTS_MESSAGES: 'Send TTS Messages',
                MANAGE_MESSAGES: 'Manage Messages',
                EMBED_LINKS: 'Embed Links',
                ATTACH_FILES: 'Attach Files',
                READ_MESSAGE_HISTORY: 'Read Message History',
                MENTION_EVERYONE: 'Mention Everyone',
                USE_EXTERNAL_EMOJIS: 'Use External Emojis',
                ADD_REACTIONS: 'Add Reactions',
                CONNECT: 'Connect',
                SPEAK: 'Speak',
                MUTE_MEMBERS: 'Mute Members',
                DEAFEN_MEMBERS: 'Deafen Members',
                MOVE_MEMBERS: 'Move Members',
                USE_VAD: 'Use Voice Activity',
                STREAM: 'Go Live'
            },

            DISCORD_REGIONS: {
                'eu-central': 'Central Europe',
                india: 'India',
                london: 'London',
                japan: 'Japan',
                amsterdam: 'Amsterdam',
                brazil: 'Brazil',
                'us-west': 'US West',
                hongkong: 'Hong Kong',
                southafrica: 'South Africa',
                sydney: 'Sydney',
                europe: 'Europe',
                singapore: 'Singapore',
                'us-central': 'US Central',
                'eu-west': 'Western Europe',
                dubai: 'Dubai',
                'us-south': 'US South',
                'us-east': 'US East',
                frankfurt: 'Frankfurt',
                russia: 'Russia'
            },

            DISCORD_VERIFICATIONLEVELS: {
                NONE: 'None',
                LOW: 'Low',
                MEDIUM: 'Medium',
                HIGH: '(╯°□°）╯︵ ┻━┻',
                VERY_HIGH: '┻━┻ ﾐヽ(ಠ益ಠ)ノ彡┻━┻'
            }
        }
    }
}