import { FT, T } from '@foxxie/i18n';

export const Color = FT<{ color: string }>('arguments:color');
export const Birthday = FT<{ parameter: string }>('arguments:birthday');
export const BirthdayDay = FT<{ day: number; monthKey: string }>('arguments:birthdayDay');
export const BirthdayMonth = FT<{ month: number }>('arguments:birthdayMonth');
export const BirthdayMonths = T<string[]>('arguments:birthdayMonths');
export const BirthdayYear = FT<{ year: number; msg: string }>('arguments:birthdayYear');
export const BirthdayYearFuture = T('arguments:birthdayYearFuture');
export const BirthdayYearPast = T('arguments:birthdayYearPast');
export const Boolean = FT<{ parameter: string }>('arguments:boolean');
export const BooleanFalses = T<string[]>('arguments:booleanFalses');
export const BooleanTruths = T<string[]>('arguments:booleanTruths');
export const Command = FT<{ parameter: string }>('arguments:command');
export const Duration = FT<{ parameter: string }>('arguments:duration');
export const Guild = FT<{ parameter: string }>('arguments:guild');
export const Language = FT<{ list: string[]; parameter: string }>('arguments:language');
export const Piece = FT<{ parameter: string }>('arguments:piece');
export const Reminder = FT<{ parameter: string }>('arguments:reminder');
export const Snowflake = FT<{ parameter: string }>('arguments:snowflake');
export const Store = FT<{ parameter: string; possibles: string[] }>('arguments:store');
export const TimespanTooLarge = FT<{ duration: number; parameter: string }, string>('arguments:timespanTooLarge');
export const TimespanTooSmall = FT<{ duration: number; parameter: string }, string>('arguments:timespanTooSmall');
export const User = FT<{ parameter: string }>('arguments:user');
